// Copyright (c) 2018 Anki, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License in the file LICENSE.txt or at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Settings definition

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.12.4
// source: settings.proto

package vectorpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ApiVersion int32

const (
	ApiVersion_INVALID ApiVersion = 0
	ApiVersion_LATEST  ApiVersion = 1
)

// Enum value maps for ApiVersion.
var (
	ApiVersion_name = map[int32]string{
		0: "INVALID",
		1: "LATEST",
	}
	ApiVersion_value = map[string]int32{
		"INVALID": 0,
		"LATEST":  1,
	}
)

func (x ApiVersion) Enum() *ApiVersion {
	p := new(ApiVersion)
	*p = x
	return p
}

func (x ApiVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_settings_proto_enumTypes[0].Descriptor()
}

func (ApiVersion) Type() protoreflect.EnumType {
	return &file_settings_proto_enumTypes[0]
}

func (x ApiVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiVersion.Descriptor instead.
func (ApiVersion) EnumDescriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{0}
}

type Volume int32

const (
	Volume_MUTE        Volume = 0
	Volume_LOW         Volume = 1
	Volume_MEDIUM_LOW  Volume = 2
	Volume_MEDIUM      Volume = 3
	Volume_MEDIUM_HIGH Volume = 4
	Volume_HIGH        Volume = 5
)

// Enum value maps for Volume.
var (
	Volume_name = map[int32]string{
		0: "MUTE",
		1: "LOW",
		2: "MEDIUM_LOW",
		3: "MEDIUM",
		4: "MEDIUM_HIGH",
		5: "HIGH",
	}
	Volume_value = map[string]int32{
		"MUTE":        0,
		"LOW":         1,
		"MEDIUM_LOW":  2,
		"MEDIUM":      3,
		"MEDIUM_HIGH": 4,
		"HIGH":        5,
	}
)

func (x Volume) Enum() *Volume {
	p := new(Volume)
	*p = x
	return p
}

func (x Volume) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Volume) Descriptor() protoreflect.EnumDescriptor {
	return file_settings_proto_enumTypes[1].Descriptor()
}

func (Volume) Type() protoreflect.EnumType {
	return &file_settings_proto_enumTypes[1]
}

func (x Volume) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Volume.Descriptor instead.
func (Volume) EnumDescriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{1}
}

type JdocType int32

const (
	JdocType_ROBOT_SETTINGS       JdocType = 0
	JdocType_ROBOT_LIFETIME_STATS JdocType = 1
	JdocType_ACCOUNT_SETTINGS     JdocType = 2
	JdocType_USER_ENTITLEMENTS    JdocType = 3
)

// Enum value maps for JdocType.
var (
	JdocType_name = map[int32]string{
		0: "ROBOT_SETTINGS",
		1: "ROBOT_LIFETIME_STATS",
		2: "ACCOUNT_SETTINGS",
		3: "USER_ENTITLEMENTS",
	}
	JdocType_value = map[string]int32{
		"ROBOT_SETTINGS":       0,
		"ROBOT_LIFETIME_STATS": 1,
		"ACCOUNT_SETTINGS":     2,
		"USER_ENTITLEMENTS":    3,
	}
)

func (x JdocType) Enum() *JdocType {
	p := new(JdocType)
	*p = x
	return p
}

func (x JdocType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JdocType) Descriptor() protoreflect.EnumDescriptor {
	return file_settings_proto_enumTypes[2].Descriptor()
}

func (JdocType) Type() protoreflect.EnumType {
	return &file_settings_proto_enumTypes[2]
}

func (x JdocType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JdocType.Descriptor instead.
func (JdocType) EnumDescriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{2}
}

type JdocResolveMethod int32

const (
	JdocResolveMethod_PUSH_TO_CLOUD   JdocResolveMethod = 0
	JdocResolveMethod_PULL_FROM_CLOUD JdocResolveMethod = 1
)

// Enum value maps for JdocResolveMethod.
var (
	JdocResolveMethod_name = map[int32]string{
		0: "PUSH_TO_CLOUD",
		1: "PULL_FROM_CLOUD",
	}
	JdocResolveMethod_value = map[string]int32{
		"PUSH_TO_CLOUD":   0,
		"PULL_FROM_CLOUD": 1,
	}
)

func (x JdocResolveMethod) Enum() *JdocResolveMethod {
	p := new(JdocResolveMethod)
	*p = x
	return p
}

func (x JdocResolveMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JdocResolveMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_settings_proto_enumTypes[3].Descriptor()
}

func (JdocResolveMethod) Type() protoreflect.EnumType {
	return &file_settings_proto_enumTypes[3]
}

func (x JdocResolveMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JdocResolveMethod.Descriptor instead.
func (JdocResolveMethod) EnumDescriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{3}
}

// RobotSetting enum values are not in all caps for historical reasons.
// Changing that now would involve a format migration because we're now
// saving robot settings jdocs in the cloud.
type RobotSetting int32

const (
	RobotSetting_clock_24_hour      RobotSetting = 0
	RobotSetting_eye_color          RobotSetting = 1
	RobotSetting_default_location   RobotSetting = 2
	RobotSetting_dist_is_metric     RobotSetting = 3
	RobotSetting_locale             RobotSetting = 4
	RobotSetting_master_volume      RobotSetting = 5
	RobotSetting_temp_is_fahrenheit RobotSetting = 6
	RobotSetting_time_zone          RobotSetting = 7
	RobotSetting_button_wakeword    RobotSetting = 8
)

// Enum value maps for RobotSetting.
var (
	RobotSetting_name = map[int32]string{
		0: "clock_24_hour",
		1: "eye_color",
		2: "default_location",
		3: "dist_is_metric",
		4: "locale",
		5: "master_volume",
		6: "temp_is_fahrenheit",
		7: "time_zone",
		8: "button_wakeword",
	}
	RobotSetting_value = map[string]int32{
		"clock_24_hour":      0,
		"eye_color":          1,
		"default_location":   2,
		"dist_is_metric":     3,
		"locale":             4,
		"master_volume":      5,
		"temp_is_fahrenheit": 6,
		"time_zone":          7,
		"button_wakeword":    8,
	}
)

func (x RobotSetting) Enum() *RobotSetting {
	p := new(RobotSetting)
	*p = x
	return p
}

func (x RobotSetting) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RobotSetting) Descriptor() protoreflect.EnumDescriptor {
	return file_settings_proto_enumTypes[4].Descriptor()
}

func (RobotSetting) Type() protoreflect.EnumType {
	return &file_settings_proto_enumTypes[4]
}

func (x RobotSetting) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RobotSetting.Descriptor instead.
func (RobotSetting) EnumDescriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{4}
}

type EyeColor int32

const (
	EyeColor_TIP_OVER_TEAL          EyeColor = 0
	EyeColor_OVERFIT_ORANGE         EyeColor = 1
	EyeColor_UNCANNY_YELLOW         EyeColor = 2
	EyeColor_NON_LINEAR_LIME        EyeColor = 3
	EyeColor_SINGULARITY_SAPPHIRE   EyeColor = 4
	EyeColor_FALSE_POSITIVE_PURPLE  EyeColor = 5
	EyeColor_CONFUSION_MATRIX_GREEN EyeColor = 6
)

// Enum value maps for EyeColor.
var (
	EyeColor_name = map[int32]string{
		0: "TIP_OVER_TEAL",
		1: "OVERFIT_ORANGE",
		2: "UNCANNY_YELLOW",
		3: "NON_LINEAR_LIME",
		4: "SINGULARITY_SAPPHIRE",
		5: "FALSE_POSITIVE_PURPLE",
		6: "CONFUSION_MATRIX_GREEN",
	}
	EyeColor_value = map[string]int32{
		"TIP_OVER_TEAL":          0,
		"OVERFIT_ORANGE":         1,
		"UNCANNY_YELLOW":         2,
		"NON_LINEAR_LIME":        3,
		"SINGULARITY_SAPPHIRE":   4,
		"FALSE_POSITIVE_PURPLE":  5,
		"CONFUSION_MATRIX_GREEN": 6,
	}
)

func (x EyeColor) Enum() *EyeColor {
	p := new(EyeColor)
	*p = x
	return p
}

func (x EyeColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EyeColor) Descriptor() protoreflect.EnumDescriptor {
	return file_settings_proto_enumTypes[5].Descriptor()
}

func (EyeColor) Type() protoreflect.EnumType {
	return &file_settings_proto_enumTypes[5]
}

func (x EyeColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EyeColor.Descriptor instead.
func (EyeColor) EnumDescriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{5}
}

type ButtonWakeWord int32

const (
	ButtonWakeWord_BUTTON_WAKEWORD_HEY_VECTOR ButtonWakeWord = 0
	ButtonWakeWord_BUTTON_WAKEWORD_ALEXA      ButtonWakeWord = 1
)

// Enum value maps for ButtonWakeWord.
var (
	ButtonWakeWord_name = map[int32]string{
		0: "BUTTON_WAKEWORD_HEY_VECTOR",
		1: "BUTTON_WAKEWORD_ALEXA",
	}
	ButtonWakeWord_value = map[string]int32{
		"BUTTON_WAKEWORD_HEY_VECTOR": 0,
		"BUTTON_WAKEWORD_ALEXA":      1,
	}
)

func (x ButtonWakeWord) Enum() *ButtonWakeWord {
	p := new(ButtonWakeWord)
	*p = x
	return p
}

func (x ButtonWakeWord) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ButtonWakeWord) Descriptor() protoreflect.EnumDescriptor {
	return file_settings_proto_enumTypes[6].Descriptor()
}

func (ButtonWakeWord) Type() protoreflect.EnumType {
	return &file_settings_proto_enumTypes[6]
}

func (x ButtonWakeWord) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ButtonWakeWord.Descriptor instead.
func (ButtonWakeWord) EnumDescriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{6}
}

type AccountSetting int32

const (
	AccountSetting_DATA_COLLECTION AccountSetting = 0
	AccountSetting_APP_LOCALE      AccountSetting = 1
)

// Enum value maps for AccountSetting.
var (
	AccountSetting_name = map[int32]string{
		0: "DATA_COLLECTION",
		1: "APP_LOCALE",
	}
	AccountSetting_value = map[string]int32{
		"DATA_COLLECTION": 0,
		"APP_LOCALE":      1,
	}
)

func (x AccountSetting) Enum() *AccountSetting {
	p := new(AccountSetting)
	*p = x
	return p
}

func (x AccountSetting) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountSetting) Descriptor() protoreflect.EnumDescriptor {
	return file_settings_proto_enumTypes[7].Descriptor()
}

func (AccountSetting) Type() protoreflect.EnumType {
	return &file_settings_proto_enumTypes[7]
}

func (x AccountSetting) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountSetting.Descriptor instead.
func (AccountSetting) EnumDescriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{7}
}

type ResultCode int32

const (
	ResultCode_SETTINGS_ACCEPTED        ResultCode = 0
	ResultCode_ERROR_UPDATE_IN_PROGRESS ResultCode = 1
)

// Enum value maps for ResultCode.
var (
	ResultCode_name = map[int32]string{
		0: "SETTINGS_ACCEPTED",
		1: "ERROR_UPDATE_IN_PROGRESS",
	}
	ResultCode_value = map[string]int32{
		"SETTINGS_ACCEPTED":        0,
		"ERROR_UPDATE_IN_PROGRESS": 1,
	}
)

func (x ResultCode) Enum() *ResultCode {
	p := new(ResultCode)
	*p = x
	return p
}

func (x ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_settings_proto_enumTypes[8].Descriptor()
}

func (ResultCode) Type() protoreflect.EnumType {
	return &file_settings_proto_enumTypes[8]
}

func (x ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResultCode.Descriptor instead.
func (ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{8}
}

type RobotSettingsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OneofClock_24Hour:
	//	*RobotSettingsConfig_Clock_24Hour
	OneofClock_24Hour isRobotSettingsConfig_OneofClock_24Hour `protobuf_oneof:"oneof_clock_24_hour"`
	// Types that are assignable to OneofEyeColor:
	//	*RobotSettingsConfig_EyeColor
	OneofEyeColor isRobotSettingsConfig_OneofEyeColor `protobuf_oneof:"oneof_eye_color"`
	// Types that are assignable to OneofDefaultLocation:
	//	*RobotSettingsConfig_DefaultLocation
	OneofDefaultLocation isRobotSettingsConfig_OneofDefaultLocation `protobuf_oneof:"oneof_default_location"`
	// Types that are assignable to OneofDistIsMetric:
	//	*RobotSettingsConfig_DistIsMetric
	OneofDistIsMetric isRobotSettingsConfig_OneofDistIsMetric `protobuf_oneof:"oneof_dist_is_metric"`
	// Types that are assignable to OneofLocale:
	//	*RobotSettingsConfig_Locale
	OneofLocale isRobotSettingsConfig_OneofLocale `protobuf_oneof:"oneof_locale"`
	// Types that are assignable to OneofMasterVolume:
	//	*RobotSettingsConfig_MasterVolume
	OneofMasterVolume isRobotSettingsConfig_OneofMasterVolume `protobuf_oneof:"oneof_master_volume"`
	// Types that are assignable to OneofTempIsFahrenheit:
	//	*RobotSettingsConfig_TempIsFahrenheit
	OneofTempIsFahrenheit isRobotSettingsConfig_OneofTempIsFahrenheit `protobuf_oneof:"oneof_temp_is_fahrenheit"`
	// Types that are assignable to OneofTimeZone:
	//	*RobotSettingsConfig_TimeZone
	OneofTimeZone isRobotSettingsConfig_OneofTimeZone `protobuf_oneof:"oneof_time_zone"`
	// Types that are assignable to OneofButtonWakeword:
	//	*RobotSettingsConfig_ButtonWakeword
	OneofButtonWakeword isRobotSettingsConfig_OneofButtonWakeword `protobuf_oneof:"oneof_button_wakeword"`
}

func (x *RobotSettingsConfig) Reset() {
	*x = RobotSettingsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotSettingsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotSettingsConfig) ProtoMessage() {}

func (x *RobotSettingsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotSettingsConfig.ProtoReflect.Descriptor instead.
func (*RobotSettingsConfig) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{0}
}

func (m *RobotSettingsConfig) GetOneofClock_24Hour() isRobotSettingsConfig_OneofClock_24Hour {
	if m != nil {
		return m.OneofClock_24Hour
	}
	return nil
}

func (x *RobotSettingsConfig) GetClock_24Hour() bool {
	if x, ok := x.GetOneofClock_24Hour().(*RobotSettingsConfig_Clock_24Hour); ok {
		return x.Clock_24Hour
	}
	return false
}

func (m *RobotSettingsConfig) GetOneofEyeColor() isRobotSettingsConfig_OneofEyeColor {
	if m != nil {
		return m.OneofEyeColor
	}
	return nil
}

func (x *RobotSettingsConfig) GetEyeColor() EyeColor {
	if x, ok := x.GetOneofEyeColor().(*RobotSettingsConfig_EyeColor); ok {
		return x.EyeColor
	}
	return EyeColor_TIP_OVER_TEAL
}

func (m *RobotSettingsConfig) GetOneofDefaultLocation() isRobotSettingsConfig_OneofDefaultLocation {
	if m != nil {
		return m.OneofDefaultLocation
	}
	return nil
}

func (x *RobotSettingsConfig) GetDefaultLocation() string {
	if x, ok := x.GetOneofDefaultLocation().(*RobotSettingsConfig_DefaultLocation); ok {
		return x.DefaultLocation
	}
	return ""
}

func (m *RobotSettingsConfig) GetOneofDistIsMetric() isRobotSettingsConfig_OneofDistIsMetric {
	if m != nil {
		return m.OneofDistIsMetric
	}
	return nil
}

func (x *RobotSettingsConfig) GetDistIsMetric() bool {
	if x, ok := x.GetOneofDistIsMetric().(*RobotSettingsConfig_DistIsMetric); ok {
		return x.DistIsMetric
	}
	return false
}

func (m *RobotSettingsConfig) GetOneofLocale() isRobotSettingsConfig_OneofLocale {
	if m != nil {
		return m.OneofLocale
	}
	return nil
}

func (x *RobotSettingsConfig) GetLocale() string {
	if x, ok := x.GetOneofLocale().(*RobotSettingsConfig_Locale); ok {
		return x.Locale
	}
	return ""
}

func (m *RobotSettingsConfig) GetOneofMasterVolume() isRobotSettingsConfig_OneofMasterVolume {
	if m != nil {
		return m.OneofMasterVolume
	}
	return nil
}

func (x *RobotSettingsConfig) GetMasterVolume() Volume {
	if x, ok := x.GetOneofMasterVolume().(*RobotSettingsConfig_MasterVolume); ok {
		return x.MasterVolume
	}
	return Volume_MUTE
}

func (m *RobotSettingsConfig) GetOneofTempIsFahrenheit() isRobotSettingsConfig_OneofTempIsFahrenheit {
	if m != nil {
		return m.OneofTempIsFahrenheit
	}
	return nil
}

func (x *RobotSettingsConfig) GetTempIsFahrenheit() bool {
	if x, ok := x.GetOneofTempIsFahrenheit().(*RobotSettingsConfig_TempIsFahrenheit); ok {
		return x.TempIsFahrenheit
	}
	return false
}

func (m *RobotSettingsConfig) GetOneofTimeZone() isRobotSettingsConfig_OneofTimeZone {
	if m != nil {
		return m.OneofTimeZone
	}
	return nil
}

func (x *RobotSettingsConfig) GetTimeZone() string {
	if x, ok := x.GetOneofTimeZone().(*RobotSettingsConfig_TimeZone); ok {
		return x.TimeZone
	}
	return ""
}

func (m *RobotSettingsConfig) GetOneofButtonWakeword() isRobotSettingsConfig_OneofButtonWakeword {
	if m != nil {
		return m.OneofButtonWakeword
	}
	return nil
}

func (x *RobotSettingsConfig) GetButtonWakeword() ButtonWakeWord {
	if x, ok := x.GetOneofButtonWakeword().(*RobotSettingsConfig_ButtonWakeword); ok {
		return x.ButtonWakeword
	}
	return ButtonWakeWord_BUTTON_WAKEWORD_HEY_VECTOR
}

type isRobotSettingsConfig_OneofClock_24Hour interface {
	isRobotSettingsConfig_OneofClock_24Hour()
}

type RobotSettingsConfig_Clock_24Hour struct {
	Clock_24Hour bool `protobuf:"varint,1,opt,name=clock_24_hour,json=clock24Hour,proto3,oneof"`
}

func (*RobotSettingsConfig_Clock_24Hour) isRobotSettingsConfig_OneofClock_24Hour() {}

type isRobotSettingsConfig_OneofEyeColor interface {
	isRobotSettingsConfig_OneofEyeColor()
}

type RobotSettingsConfig_EyeColor struct {
	EyeColor EyeColor `protobuf:"varint,2,opt,name=eye_color,json=eyeColor,proto3,enum=Anki.Vector.external_interface.EyeColor,oneof"`
}

func (*RobotSettingsConfig_EyeColor) isRobotSettingsConfig_OneofEyeColor() {}

type isRobotSettingsConfig_OneofDefaultLocation interface {
	isRobotSettingsConfig_OneofDefaultLocation()
}

type RobotSettingsConfig_DefaultLocation struct {
	DefaultLocation string `protobuf:"bytes,3,opt,name=default_location,json=defaultLocation,proto3,oneof"`
}

func (*RobotSettingsConfig_DefaultLocation) isRobotSettingsConfig_OneofDefaultLocation() {}

type isRobotSettingsConfig_OneofDistIsMetric interface {
	isRobotSettingsConfig_OneofDistIsMetric()
}

type RobotSettingsConfig_DistIsMetric struct {
	DistIsMetric bool `protobuf:"varint,4,opt,name=dist_is_metric,json=distIsMetric,proto3,oneof"`
}

func (*RobotSettingsConfig_DistIsMetric) isRobotSettingsConfig_OneofDistIsMetric() {}

type isRobotSettingsConfig_OneofLocale interface {
	isRobotSettingsConfig_OneofLocale()
}

type RobotSettingsConfig_Locale struct {
	Locale string `protobuf:"bytes,5,opt,name=locale,proto3,oneof"`
}

func (*RobotSettingsConfig_Locale) isRobotSettingsConfig_OneofLocale() {}

type isRobotSettingsConfig_OneofMasterVolume interface {
	isRobotSettingsConfig_OneofMasterVolume()
}

type RobotSettingsConfig_MasterVolume struct {
	MasterVolume Volume `protobuf:"varint,6,opt,name=master_volume,json=masterVolume,proto3,enum=Anki.Vector.external_interface.Volume,oneof"`
}

func (*RobotSettingsConfig_MasterVolume) isRobotSettingsConfig_OneofMasterVolume() {}

type isRobotSettingsConfig_OneofTempIsFahrenheit interface {
	isRobotSettingsConfig_OneofTempIsFahrenheit()
}

type RobotSettingsConfig_TempIsFahrenheit struct {
	TempIsFahrenheit bool `protobuf:"varint,7,opt,name=temp_is_fahrenheit,json=tempIsFahrenheit,proto3,oneof"`
}

func (*RobotSettingsConfig_TempIsFahrenheit) isRobotSettingsConfig_OneofTempIsFahrenheit() {}

type isRobotSettingsConfig_OneofTimeZone interface {
	isRobotSettingsConfig_OneofTimeZone()
}

type RobotSettingsConfig_TimeZone struct {
	TimeZone string `protobuf:"bytes,8,opt,name=time_zone,json=timeZone,proto3,oneof"`
}

func (*RobotSettingsConfig_TimeZone) isRobotSettingsConfig_OneofTimeZone() {}

type isRobotSettingsConfig_OneofButtonWakeword interface {
	isRobotSettingsConfig_OneofButtonWakeword()
}

type RobotSettingsConfig_ButtonWakeword struct {
	ButtonWakeword ButtonWakeWord `protobuf:"varint,9,opt,name=button_wakeword,json=buttonWakeword,proto3,enum=Anki.Vector.external_interface.ButtonWakeWord,oneof"`
}

func (*RobotSettingsConfig_ButtonWakeword) isRobotSettingsConfig_OneofButtonWakeword() {}

type AccountSettingsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OneofDataCollection:
	//	*AccountSettingsConfig_DataCollection
	OneofDataCollection isAccountSettingsConfig_OneofDataCollection `protobuf_oneof:"oneof_data_collection"`
	// Types that are assignable to OneofAppLocale:
	//	*AccountSettingsConfig_AppLocale
	OneofAppLocale isAccountSettingsConfig_OneofAppLocale `protobuf_oneof:"oneof_app_locale"`
}

func (x *AccountSettingsConfig) Reset() {
	*x = AccountSettingsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSettingsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSettingsConfig) ProtoMessage() {}

func (x *AccountSettingsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSettingsConfig.ProtoReflect.Descriptor instead.
func (*AccountSettingsConfig) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{1}
}

func (m *AccountSettingsConfig) GetOneofDataCollection() isAccountSettingsConfig_OneofDataCollection {
	if m != nil {
		return m.OneofDataCollection
	}
	return nil
}

func (x *AccountSettingsConfig) GetDataCollection() bool {
	if x, ok := x.GetOneofDataCollection().(*AccountSettingsConfig_DataCollection); ok {
		return x.DataCollection
	}
	return false
}

func (m *AccountSettingsConfig) GetOneofAppLocale() isAccountSettingsConfig_OneofAppLocale {
	if m != nil {
		return m.OneofAppLocale
	}
	return nil
}

func (x *AccountSettingsConfig) GetAppLocale() string {
	if x, ok := x.GetOneofAppLocale().(*AccountSettingsConfig_AppLocale); ok {
		return x.AppLocale
	}
	return ""
}

type isAccountSettingsConfig_OneofDataCollection interface {
	isAccountSettingsConfig_OneofDataCollection()
}

type AccountSettingsConfig_DataCollection struct {
	DataCollection bool `protobuf:"varint,1,opt,name=data_collection,json=dataCollection,proto3,oneof"`
}

func (*AccountSettingsConfig_DataCollection) isAccountSettingsConfig_OneofDataCollection() {}

type isAccountSettingsConfig_OneofAppLocale interface {
	isAccountSettingsConfig_OneofAppLocale()
}

type AccountSettingsConfig_AppLocale struct {
	AppLocale string `protobuf:"bytes,2,opt,name=app_locale,json=appLocale,proto3,oneof"`
}

func (*AccountSettingsConfig_AppLocale) isAccountSettingsConfig_OneofAppLocale() {}

type Jdoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocVersion     uint64 `protobuf:"varint,1,opt,name=doc_version,json=docVersion,proto3" json:"doc_version,omitempty"`
	FmtVersion     uint64 `protobuf:"varint,2,opt,name=fmt_version,json=fmtVersion,proto3" json:"fmt_version,omitempty"`
	ClientMetadata string `protobuf:"bytes,3,opt,name=client_metadata,json=clientMetadata,proto3" json:"client_metadata,omitempty"`
	JsonDoc        string `protobuf:"bytes,4,opt,name=json_doc,json=jsonDoc,proto3" json:"json_doc,omitempty"`
}

func (x *Jdoc) Reset() {
	*x = Jdoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Jdoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jdoc) ProtoMessage() {}

func (x *Jdoc) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jdoc.ProtoReflect.Descriptor instead.
func (*Jdoc) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{2}
}

func (x *Jdoc) GetDocVersion() uint64 {
	if x != nil {
		return x.DocVersion
	}
	return 0
}

func (x *Jdoc) GetFmtVersion() uint64 {
	if x != nil {
		return x.FmtVersion
	}
	return 0
}

func (x *Jdoc) GetClientMetadata() string {
	if x != nil {
		return x.ClientMetadata
	}
	return ""
}

func (x *Jdoc) GetJsonDoc() string {
	if x != nil {
		return x.JsonDoc
	}
	return ""
}

type NamedJdoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JdocType JdocType `protobuf:"varint,1,opt,name=jdoc_type,json=jdocType,proto3,enum=Anki.Vector.external_interface.JdocType" json:"jdoc_type,omitempty"`
	Doc      *Jdoc    `protobuf:"bytes,2,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *NamedJdoc) Reset() {
	*x = NamedJdoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedJdoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedJdoc) ProtoMessage() {}

func (x *NamedJdoc) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedJdoc.ProtoReflect.Descriptor instead.
func (*NamedJdoc) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{3}
}

func (x *NamedJdoc) GetJdocType() JdocType {
	if x != nil {
		return x.JdocType
	}
	return JdocType_ROBOT_SETTINGS
}

func (x *NamedJdoc) GetDoc() *Jdoc {
	if x != nil {
		return x.Doc
	}
	return nil
}

type PullJdocsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JdocTypes []JdocType `protobuf:"varint,1,rep,packed,name=jdoc_types,json=jdocTypes,proto3,enum=Anki.Vector.external_interface.JdocType" json:"jdoc_types,omitempty"`
}

func (x *PullJdocsRequest) Reset() {
	*x = PullJdocsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullJdocsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullJdocsRequest) ProtoMessage() {}

func (x *PullJdocsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullJdocsRequest.ProtoReflect.Descriptor instead.
func (*PullJdocsRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{4}
}

func (x *PullJdocsRequest) GetJdocTypes() []JdocType {
	if x != nil {
		return x.JdocTypes
	}
	return nil
}

type PullJdocsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     *ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NamedJdocs []*NamedJdoc    `protobuf:"bytes,2,rep,name=named_jdocs,json=namedJdocs,proto3" json:"named_jdocs,omitempty"`
}

func (x *PullJdocsResponse) Reset() {
	*x = PullJdocsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullJdocsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullJdocsResponse) ProtoMessage() {}

func (x *PullJdocsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullJdocsResponse.ProtoReflect.Descriptor instead.
func (*PullJdocsResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{5}
}

func (x *PullJdocsResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PullJdocsResponse) GetNamedJdocs() []*NamedJdoc {
	if x != nil {
		return x.NamedJdocs
	}
	return nil
}

type UpdateSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings *RobotSettingsConfig `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *UpdateSettingsRequest) Reset() {
	*x = UpdateSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSettingsRequest) ProtoMessage() {}

func (x *UpdateSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateSettingsRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSettingsRequest) GetSettings() *RobotSettingsConfig {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Code   ResultCode      `protobuf:"varint,2,opt,name=code,proto3,enum=Anki.Vector.external_interface.ResultCode" json:"code,omitempty"`
	Doc    *Jdoc           `protobuf:"bytes,3,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *UpdateSettingsResponse) Reset() {
	*x = UpdateSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSettingsResponse) ProtoMessage() {}

func (x *UpdateSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateSettingsResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSettingsResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UpdateSettingsResponse) GetCode() ResultCode {
	if x != nil {
		return x.Code
	}
	return ResultCode_SETTINGS_ACCEPTED
}

func (x *UpdateSettingsResponse) GetDoc() *Jdoc {
	if x != nil {
		return x.Doc
	}
	return nil
}

type UpdateAccountSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountSettings *AccountSettingsConfig `protobuf:"bytes,1,opt,name=account_settings,json=accountSettings,proto3" json:"account_settings,omitempty"`
}

func (x *UpdateAccountSettingsRequest) Reset() {
	*x = UpdateAccountSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountSettingsRequest) ProtoMessage() {}

func (x *UpdateAccountSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountSettingsRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAccountSettingsRequest) GetAccountSettings() *AccountSettingsConfig {
	if x != nil {
		return x.AccountSettings
	}
	return nil
}

type UpdateAccountSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Code   ResultCode      `protobuf:"varint,2,opt,name=code,proto3,enum=Anki.Vector.external_interface.ResultCode" json:"code,omitempty"`
	Doc    *Jdoc           `protobuf:"bytes,3,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *UpdateAccountSettingsResponse) Reset() {
	*x = UpdateAccountSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountSettingsResponse) ProtoMessage() {}

func (x *UpdateAccountSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateAccountSettingsResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateAccountSettingsResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UpdateAccountSettingsResponse) GetCode() ResultCode {
	if x != nil {
		return x.Code
	}
	return ResultCode_SETTINGS_ACCEPTED
}

func (x *UpdateAccountSettingsResponse) GetDoc() *Jdoc {
	if x != nil {
		return x.Doc
	}
	return nil
}

type JdocsChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JdocTypes []JdocType `protobuf:"varint,1,rep,packed,name=jdoc_types,json=jdocTypes,proto3,enum=Anki.Vector.external_interface.JdocType" json:"jdoc_types,omitempty"`
}

func (x *JdocsChanged) Reset() {
	*x = JdocsChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JdocsChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JdocsChanged) ProtoMessage() {}

func (x *JdocsChanged) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JdocsChanged.ProtoReflect.Descriptor instead.
func (*JdocsChanged) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{10}
}

func (x *JdocsChanged) GetJdocTypes() []JdocType {
	if x != nil {
		return x.JdocTypes
	}
	return nil
}

var File_settings_proto protoreflect.FileDescriptor

var file_settings_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x1a, 0x15, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x05, 0x0a, 0x13, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x32, 0x34, 0x5f, 0x68, 0x6f, 0x75, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x32,
	0x34, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x47, 0x0a, 0x09, 0x65, 0x79, 0x65, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x45, 0x79, 0x65, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x48, 0x01, 0x52, 0x08, 0x65, 0x79, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2b,
	0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x64,
	0x69, 0x73, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x49, 0x73, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x4d, 0x0a,
	0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x48, 0x05, 0x52, 0x0c,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x74, 0x65, 0x6d, 0x70, 0x5f, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x68, 0x72, 0x65, 0x6e, 0x68, 0x65,
	0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x10, 0x74, 0x65, 0x6d, 0x70,
	0x49, 0x73, 0x46, 0x61, 0x68, 0x72, 0x65, 0x6e, 0x68, 0x65, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x59, 0x0a, 0x0f, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x77, 0x61, 0x6b, 0x65, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x57, 0x61, 0x6b, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x48, 0x08, 0x52, 0x0e, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x57, 0x61,
	0x6b, 0x65, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x15, 0x0a, 0x13, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x32, 0x34, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x42, 0x11, 0x0a,
	0x0f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x65, 0x79, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x42, 0x18, 0x0a, 0x16, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x6f, 0x6e,
	0x65, 0x6f, 0x66, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x42, 0x0e, 0x0a, 0x0c, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x1a, 0x0a, 0x18, 0x6f, 0x6e, 0x65,
	0x6f, 0x66, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x68, 0x72, 0x65,
	0x6e, 0x68, 0x65, 0x69, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x77, 0x61, 0x6b, 0x65, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x90, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29, 0x0a, 0x0f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x61, 0x70,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x12, 0x0a, 0x10, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x04, 0x4a, 0x64, 0x6f, 0x63, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x6f, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x6d, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x6d, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x5f, 0x64, 0x6f, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e,
	0x44, 0x6f, 0x63, 0x22, 0x8a, 0x01, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x4a, 0x64, 0x6f,
	0x63, 0x12, 0x45, 0x0a, 0x09, 0x6a, 0x64, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x4a, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x6a, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x4a, 0x64, 0x6f, 0x63, 0x52, 0x03, 0x64, 0x6f, 0x63,
	0x22, 0x5b, 0x0a, 0x10, 0x50, 0x75, 0x6c, 0x6c, 0x4a, 0x64, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0a, 0x6a, 0x64, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x4a, 0x64, 0x6f, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x6a, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0xa7, 0x01,
	0x0a, 0x11, 0x50, 0x75, 0x6c, 0x6c, 0x4a, 0x64, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4a, 0x0a, 0x0b, 0x6e,
	0x61, 0x6d, 0x65, 0x64, 0x5f, 0x6a, 0x64, 0x6f, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x4a, 0x64, 0x6f, 0x63, 0x52, 0x0a, 0x6e, 0x61, 0x6d,
	0x65, 0x64, 0x4a, 0x64, 0x6f, 0x63, 0x73, 0x22, 0x68, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0xd8, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x41,
	0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x4a, 0x64, 0x6f, 0x63, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x22, 0x80, 0x01, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a,
	0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0xdf, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x03, 0x64, 0x6f, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x4a, 0x64, 0x6f, 0x63, 0x52, 0x03, 0x64, 0x6f,
	0x63, 0x22, 0x57, 0x0a, 0x0c, 0x4a, 0x64, 0x6f, 0x63, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x12, 0x47, 0x0a, 0x0a, 0x6a, 0x64, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x41, 0x6e, 0x6b, 0x69, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x4a, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x6a, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2a, 0x25, 0x0a, 0x0a, 0x41, 0x70,
	0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x41, 0x54, 0x45, 0x53, 0x54, 0x10,
	0x01, 0x2a, 0x52, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4d,
	0x55, 0x54, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x45,
	0x44, 0x49, 0x55, 0x4d, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x48,
	0x49, 0x47, 0x48, 0x10, 0x05, 0x2a, 0x65, 0x0a, 0x08, 0x4a, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x49,
	0x4e, 0x47, 0x53, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x4c,
	0x49, 0x46, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x49,
	0x4e, 0x47, 0x53, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e,
	0x54, 0x49, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x03, 0x2a, 0x3b, 0x0a, 0x11,
	0x4a, 0x64, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x4c, 0x4f,
	0x55, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x46, 0x52, 0x4f,
	0x4d, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x01, 0x2a, 0xb5, 0x01, 0x0a, 0x0c, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x32, 0x34, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x65, 0x79, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x69, 0x73,
	0x5f, 0x66, 0x61, 0x68, 0x72, 0x65, 0x6e, 0x68, 0x65, 0x69, 0x74, 0x10, 0x06, 0x12, 0x0d, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x77, 0x61, 0x6b, 0x65, 0x77, 0x6f, 0x72, 0x64, 0x10,
	0x08, 0x2a, 0xab, 0x01, 0x0a, 0x08, 0x45, 0x79, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x11,
	0x0a, 0x0d, 0x54, 0x49, 0x50, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x54, 0x45, 0x41, 0x4c, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x56, 0x45, 0x52, 0x46, 0x49, 0x54, 0x5f, 0x4f, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x43, 0x41, 0x4e, 0x4e, 0x59,
	0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x4e,
	0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x41, 0x52, 0x5f, 0x4c, 0x49, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x18,
	0x0a, 0x14, 0x53, 0x49, 0x4e, 0x47, 0x55, 0x4c, 0x41, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x41,
	0x50, 0x50, 0x48, 0x49, 0x52, 0x45, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x41, 0x4c, 0x53,
	0x45, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x50, 0x55, 0x52, 0x50, 0x4c,
	0x45, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x46, 0x55, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x06, 0x2a,
	0x4b, 0x0a, 0x0e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x57, 0x61, 0x6b, 0x65, 0x57, 0x6f, 0x72,
	0x64, 0x12, 0x1e, 0x0a, 0x1a, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x57, 0x41, 0x4b, 0x45,
	0x57, 0x4f, 0x52, 0x44, 0x5f, 0x48, 0x45, 0x59, 0x5f, 0x56, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x57, 0x41, 0x4b, 0x45,
	0x57, 0x4f, 0x52, 0x44, 0x5f, 0x41, 0x4c, 0x45, 0x58, 0x41, 0x10, 0x01, 0x2a, 0x35, 0x0a, 0x0e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x13,
	0x0a, 0x0f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x50, 0x50, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c,
	0x45, 0x10, 0x01, 0x2a, 0x41, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x53, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47,
	0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x64, 0x72, 0x65,
	0x61, 0x6d, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x67,
	0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_settings_proto_rawDescOnce sync.Once
	file_settings_proto_rawDescData = file_settings_proto_rawDesc
)

func file_settings_proto_rawDescGZIP() []byte {
	file_settings_proto_rawDescOnce.Do(func() {
		file_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_settings_proto_rawDescData)
	})
	return file_settings_proto_rawDescData
}

var file_settings_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_settings_proto_goTypes = []interface{}{
	(ApiVersion)(0),                       // 0: Anki.Vector.external_interface.ApiVersion
	(Volume)(0),                           // 1: Anki.Vector.external_interface.Volume
	(JdocType)(0),                         // 2: Anki.Vector.external_interface.JdocType
	(JdocResolveMethod)(0),                // 3: Anki.Vector.external_interface.JdocResolveMethod
	(RobotSetting)(0),                     // 4: Anki.Vector.external_interface.RobotSetting
	(EyeColor)(0),                         // 5: Anki.Vector.external_interface.EyeColor
	(ButtonWakeWord)(0),                   // 6: Anki.Vector.external_interface.ButtonWakeWord
	(AccountSetting)(0),                   // 7: Anki.Vector.external_interface.AccountSetting
	(ResultCode)(0),                       // 8: Anki.Vector.external_interface.ResultCode
	(*RobotSettingsConfig)(nil),           // 9: Anki.Vector.external_interface.RobotSettingsConfig
	(*AccountSettingsConfig)(nil),         // 10: Anki.Vector.external_interface.AccountSettingsConfig
	(*Jdoc)(nil),                          // 11: Anki.Vector.external_interface.Jdoc
	(*NamedJdoc)(nil),                     // 12: Anki.Vector.external_interface.NamedJdoc
	(*PullJdocsRequest)(nil),              // 13: Anki.Vector.external_interface.PullJdocsRequest
	(*PullJdocsResponse)(nil),             // 14: Anki.Vector.external_interface.PullJdocsResponse
	(*UpdateSettingsRequest)(nil),         // 15: Anki.Vector.external_interface.UpdateSettingsRequest
	(*UpdateSettingsResponse)(nil),        // 16: Anki.Vector.external_interface.UpdateSettingsResponse
	(*UpdateAccountSettingsRequest)(nil),  // 17: Anki.Vector.external_interface.UpdateAccountSettingsRequest
	(*UpdateAccountSettingsResponse)(nil), // 18: Anki.Vector.external_interface.UpdateAccountSettingsResponse
	(*JdocsChanged)(nil),                  // 19: Anki.Vector.external_interface.JdocsChanged
	(*ResponseStatus)(nil),                // 20: Anki.Vector.external_interface.ResponseStatus
}
var file_settings_proto_depIdxs = []int32{
	5,  // 0: Anki.Vector.external_interface.RobotSettingsConfig.eye_color:type_name -> Anki.Vector.external_interface.EyeColor
	1,  // 1: Anki.Vector.external_interface.RobotSettingsConfig.master_volume:type_name -> Anki.Vector.external_interface.Volume
	6,  // 2: Anki.Vector.external_interface.RobotSettingsConfig.button_wakeword:type_name -> Anki.Vector.external_interface.ButtonWakeWord
	2,  // 3: Anki.Vector.external_interface.NamedJdoc.jdoc_type:type_name -> Anki.Vector.external_interface.JdocType
	11, // 4: Anki.Vector.external_interface.NamedJdoc.doc:type_name -> Anki.Vector.external_interface.Jdoc
	2,  // 5: Anki.Vector.external_interface.PullJdocsRequest.jdoc_types:type_name -> Anki.Vector.external_interface.JdocType
	20, // 6: Anki.Vector.external_interface.PullJdocsResponse.status:type_name -> Anki.Vector.external_interface.ResponseStatus
	12, // 7: Anki.Vector.external_interface.PullJdocsResponse.named_jdocs:type_name -> Anki.Vector.external_interface.NamedJdoc
	9,  // 8: Anki.Vector.external_interface.UpdateSettingsRequest.settings:type_name -> Anki.Vector.external_interface.RobotSettingsConfig
	20, // 9: Anki.Vector.external_interface.UpdateSettingsResponse.status:type_name -> Anki.Vector.external_interface.ResponseStatus
	8,  // 10: Anki.Vector.external_interface.UpdateSettingsResponse.code:type_name -> Anki.Vector.external_interface.ResultCode
	11, // 11: Anki.Vector.external_interface.UpdateSettingsResponse.doc:type_name -> Anki.Vector.external_interface.Jdoc
	10, // 12: Anki.Vector.external_interface.UpdateAccountSettingsRequest.account_settings:type_name -> Anki.Vector.external_interface.AccountSettingsConfig
	20, // 13: Anki.Vector.external_interface.UpdateAccountSettingsResponse.status:type_name -> Anki.Vector.external_interface.ResponseStatus
	8,  // 14: Anki.Vector.external_interface.UpdateAccountSettingsResponse.code:type_name -> Anki.Vector.external_interface.ResultCode
	11, // 15: Anki.Vector.external_interface.UpdateAccountSettingsResponse.doc:type_name -> Anki.Vector.external_interface.Jdoc
	2,  // 16: Anki.Vector.external_interface.JdocsChanged.jdoc_types:type_name -> Anki.Vector.external_interface.JdocType
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_settings_proto_init() }
func file_settings_proto_init() {
	if File_settings_proto != nil {
		return
	}
	file_response_status_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_settings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotSettingsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSettingsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Jdoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedJdoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullJdocsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullJdocsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JdocsChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_settings_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RobotSettingsConfig_Clock_24Hour)(nil),
		(*RobotSettingsConfig_EyeColor)(nil),
		(*RobotSettingsConfig_DefaultLocation)(nil),
		(*RobotSettingsConfig_DistIsMetric)(nil),
		(*RobotSettingsConfig_Locale)(nil),
		(*RobotSettingsConfig_MasterVolume)(nil),
		(*RobotSettingsConfig_TempIsFahrenheit)(nil),
		(*RobotSettingsConfig_TimeZone)(nil),
		(*RobotSettingsConfig_ButtonWakeword)(nil),
	}
	file_settings_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AccountSettingsConfig_DataCollection)(nil),
		(*AccountSettingsConfig_AppLocale)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_settings_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_settings_proto_goTypes,
		DependencyIndexes: file_settings_proto_depIdxs,
		EnumInfos:         file_settings_proto_enumTypes,
		MessageInfos:      file_settings_proto_msgTypes,
	}.Build()
	File_settings_proto = out.File
	file_settings_proto_rawDesc = nil
	file_settings_proto_goTypes = nil
	file_settings_proto_depIdxs = nil
}
