// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.12.4
// source: token.proto

package tokenpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TokenBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ClientToken string `protobuf:"bytes,2,opt,name=client_token,json=clientToken,proto3" json:"client_token,omitempty"`
	//string sts_token = 3;
	StsToken *StsToken `protobuf:"bytes,4,opt,name=sts_token,json=stsToken,proto3" json:"sts_token,omitempty"`
}

func (x *TokenBundle) Reset() {
	*x = TokenBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenBundle) ProtoMessage() {}

func (x *TokenBundle) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenBundle.ProtoReflect.Descriptor instead.
func (*TokenBundle) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{0}
}

func (x *TokenBundle) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TokenBundle) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *TokenBundle) GetStsToken() *StsToken {
	if x != nil {
		return x.StsToken
	}
	return nil
}

type StsToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeyId     string `protobuf:"bytes,1,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	SecretAccessKey string `protobuf:"bytes,2,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"`
	SessionToken    string `protobuf:"bytes,3,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
	Expiration      string `protobuf:"bytes,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *StsToken) Reset() {
	*x = StsToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StsToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StsToken) ProtoMessage() {}

func (x *StsToken) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StsToken.ProtoReflect.Descriptor instead.
func (*StsToken) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{1}
}

func (x *StsToken) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *StsToken) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *StsToken) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *StsToken) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

type AssociatePrimaryUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string robot_id = 1;
	// string user_session = 2;
	GenerateStsToken   bool   `protobuf:"varint,3,opt,name=generate_sts_token,json=generateStsToken,proto3" json:"generate_sts_token,omitempty"`
	SessionCertificate []byte `protobuf:"bytes,4,opt,name=session_certificate,json=sessionCertificate,proto3" json:"session_certificate,omitempty"`
	ClientName         string `protobuf:"bytes,5,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	AppId              string `protobuf:"bytes,6,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	SkipClientToken    bool   `protobuf:"varint,7,opt,name=skip_client_token,json=skipClientToken,proto3" json:"skip_client_token,omitempty"`
	RevokeClientTokens bool   `protobuf:"varint,8,opt,name=revoke_client_tokens,json=revokeClientTokens,proto3" json:"revoke_client_tokens,omitempty"`
	ExpirationMinutes  uint32 `protobuf:"varint,9,opt,name=expiration_minutes,json=expirationMinutes,proto3" json:"expiration_minutes,omitempty"`
}

func (x *AssociatePrimaryUserRequest) Reset() {
	*x = AssociatePrimaryUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssociatePrimaryUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssociatePrimaryUserRequest) ProtoMessage() {}

func (x *AssociatePrimaryUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssociatePrimaryUserRequest.ProtoReflect.Descriptor instead.
func (*AssociatePrimaryUserRequest) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{2}
}

func (x *AssociatePrimaryUserRequest) GetGenerateStsToken() bool {
	if x != nil {
		return x.GenerateStsToken
	}
	return false
}

func (x *AssociatePrimaryUserRequest) GetSessionCertificate() []byte {
	if x != nil {
		return x.SessionCertificate
	}
	return nil
}

func (x *AssociatePrimaryUserRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *AssociatePrimaryUserRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AssociatePrimaryUserRequest) GetSkipClientToken() bool {
	if x != nil {
		return x.SkipClientToken
	}
	return false
}

func (x *AssociatePrimaryUserRequest) GetRevokeClientTokens() bool {
	if x != nil {
		return x.RevokeClientTokens
	}
	return false
}

func (x *AssociatePrimaryUserRequest) GetExpirationMinutes() uint32 {
	if x != nil {
		return x.ExpirationMinutes
	}
	return 0
}

type ReassociatePrimaryUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GenerateStsToken  bool   `protobuf:"varint,1,opt,name=generate_sts_token,json=generateStsToken,proto3" json:"generate_sts_token,omitempty"`
	ClientName        string `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	AppId             string `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	SkipClientToken   bool   `protobuf:"varint,4,opt,name=skip_client_token,json=skipClientToken,proto3" json:"skip_client_token,omitempty"`
	ExpirationMinutes uint32 `protobuf:"varint,5,opt,name=expiration_minutes,json=expirationMinutes,proto3" json:"expiration_minutes,omitempty"`
}

func (x *ReassociatePrimaryUserRequest) Reset() {
	*x = ReassociatePrimaryUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReassociatePrimaryUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReassociatePrimaryUserRequest) ProtoMessage() {}

func (x *ReassociatePrimaryUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReassociatePrimaryUserRequest.ProtoReflect.Descriptor instead.
func (*ReassociatePrimaryUserRequest) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{3}
}

func (x *ReassociatePrimaryUserRequest) GetGenerateStsToken() bool {
	if x != nil {
		return x.GenerateStsToken
	}
	return false
}

func (x *ReassociatePrimaryUserRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *ReassociatePrimaryUserRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ReassociatePrimaryUserRequest) GetSkipClientToken() bool {
	if x != nil {
		return x.SkipClientToken
	}
	return false
}

func (x *ReassociatePrimaryUserRequest) GetExpirationMinutes() uint32 {
	if x != nil {
		return x.ExpirationMinutes
	}
	return 0
}

type ReassociatePrimaryUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TokenBundle `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReassociatePrimaryUserResponse) Reset() {
	*x = ReassociatePrimaryUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReassociatePrimaryUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReassociatePrimaryUserResponse) ProtoMessage() {}

func (x *ReassociatePrimaryUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReassociatePrimaryUserResponse.ProtoReflect.Descriptor instead.
func (*ReassociatePrimaryUserResponse) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{4}
}

func (x *ReassociatePrimaryUserResponse) GetData() *TokenBundle {
	if x != nil {
		return x.Data
	}
	return nil
}

type AssociatePrimaryUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TokenBundle `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AssociatePrimaryUserResponse) Reset() {
	*x = AssociatePrimaryUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssociatePrimaryUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssociatePrimaryUserResponse) ProtoMessage() {}

func (x *AssociatePrimaryUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssociatePrimaryUserResponse.ProtoReflect.Descriptor instead.
func (*AssociatePrimaryUserResponse) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{5}
}

func (x *AssociatePrimaryUserResponse) GetData() *TokenBundle {
	if x != nil {
		return x.Data
	}
	return nil
}

type AssociateSecondaryClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string token = 1;
	UserSession string `protobuf:"bytes,2,opt,name=user_session,json=userSession,proto3" json:"user_session,omitempty"`
	ClientName  string `protobuf:"bytes,3,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	AppId       string `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *AssociateSecondaryClientRequest) Reset() {
	*x = AssociateSecondaryClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssociateSecondaryClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssociateSecondaryClientRequest) ProtoMessage() {}

func (x *AssociateSecondaryClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssociateSecondaryClientRequest.ProtoReflect.Descriptor instead.
func (*AssociateSecondaryClientRequest) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{6}
}

func (x *AssociateSecondaryClientRequest) GetUserSession() string {
	if x != nil {
		return x.UserSession
	}
	return ""
}

func (x *AssociateSecondaryClientRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *AssociateSecondaryClientRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type AssociateSecondaryClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TokenBundle `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AssociateSecondaryClientResponse) Reset() {
	*x = AssociateSecondaryClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssociateSecondaryClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssociateSecondaryClientResponse) ProtoMessage() {}

func (x *AssociateSecondaryClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssociateSecondaryClientResponse.ProtoReflect.Descriptor instead.
func (*AssociateSecondaryClientResponse) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{7}
}

func (x *AssociateSecondaryClientResponse) GetData() *TokenBundle {
	if x != nil {
		return x.Data
	}
	return nil
}

type DisassociatePrimaryUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisassociatePrimaryUserRequest) Reset() {
	*x = DisassociatePrimaryUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisassociatePrimaryUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisassociatePrimaryUserRequest) ProtoMessage() {}

func (x *DisassociatePrimaryUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisassociatePrimaryUserRequest.ProtoReflect.Descriptor instead.
func (*DisassociatePrimaryUserRequest) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{8}
}

type DisassociatePrimaryUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisassociatePrimaryUserResponse) Reset() {
	*x = DisassociatePrimaryUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisassociatePrimaryUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisassociatePrimaryUserResponse) ProtoMessage() {}

func (x *DisassociatePrimaryUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisassociatePrimaryUserResponse.ProtoReflect.Descriptor instead.
func (*DisassociatePrimaryUserResponse) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{9}
}

type RefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string token = 1;
	RefreshJwtTokens  bool   `protobuf:"varint,2,opt,name=refresh_jwt_tokens,json=refreshJwtTokens,proto3" json:"refresh_jwt_tokens,omitempty"`
	RefreshStsTokens  bool   `protobuf:"varint,3,opt,name=refresh_sts_tokens,json=refreshStsTokens,proto3" json:"refresh_sts_tokens,omitempty"`
	ExpirationMinutes uint32 `protobuf:"varint,4,opt,name=expiration_minutes,json=expirationMinutes,proto3" json:"expiration_minutes,omitempty"`
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{10}
}

func (x *RefreshTokenRequest) GetRefreshJwtTokens() bool {
	if x != nil {
		return x.RefreshJwtTokens
	}
	return false
}

func (x *RefreshTokenRequest) GetRefreshStsTokens() bool {
	if x != nil {
		return x.RefreshStsTokens
	}
	return false
}

func (x *RefreshTokenRequest) GetExpirationMinutes() uint32 {
	if x != nil {
		return x.ExpirationMinutes
	}
	return 0
}

type RefreshTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TokenBundle `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{11}
}

func (x *RefreshTokenResponse) GetData() *TokenBundle {
	if x != nil {
		return x.Data
	}
	return nil
}

type TokensPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens  []string `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	LastKey string   `protobuf:"bytes,2,opt,name=last_key,json=lastKey,proto3" json:"last_key,omitempty"`
	Done    bool     `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
}

func (x *TokensPage) Reset() {
	*x = TokensPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokensPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokensPage) ProtoMessage() {}

func (x *TokensPage) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokensPage.ProtoReflect.Descriptor instead.
func (*TokensPage) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{12}
}

func (x *TokensPage) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *TokensPage) GetLastKey() string {
	if x != nil {
		return x.LastKey
	}
	return ""
}

func (x *TokensPage) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

type ListRevokedTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousKey string `protobuf:"bytes,1,opt,name=previous_key,json=previousKey,proto3" json:"previous_key,omitempty"`
}

func (x *ListRevokedTokensRequest) Reset() {
	*x = ListRevokedTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRevokedTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRevokedTokensRequest) ProtoMessage() {}

func (x *ListRevokedTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRevokedTokensRequest.ProtoReflect.Descriptor instead.
func (*ListRevokedTokensRequest) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{13}
}

func (x *ListRevokedTokensRequest) GetPreviousKey() string {
	if x != nil {
		return x.PreviousKey
	}
	return ""
}

type ListRevokedTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TokensPage `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListRevokedTokensResponse) Reset() {
	*x = ListRevokedTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRevokedTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRevokedTokensResponse) ProtoMessage() {}

func (x *ListRevokedTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRevokedTokensResponse.ProtoReflect.Descriptor instead.
func (*ListRevokedTokensResponse) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{14}
}

func (x *ListRevokedTokensResponse) GetData() *TokensPage {
	if x != nil {
		return x.Data
	}
	return nil
}

type RevokeFactoryCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateId string `protobuf:"bytes,1,opt,name=certificate_id,json=certificateId,proto3" json:"certificate_id,omitempty"`
}

func (x *RevokeFactoryCertificateRequest) Reset() {
	*x = RevokeFactoryCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeFactoryCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeFactoryCertificateRequest) ProtoMessage() {}

func (x *RevokeFactoryCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeFactoryCertificateRequest.ProtoReflect.Descriptor instead.
func (*RevokeFactoryCertificateRequest) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{15}
}

func (x *RevokeFactoryCertificateRequest) GetCertificateId() string {
	if x != nil {
		return x.CertificateId
	}
	return ""
}

type RevokeFactoryCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeFactoryCertificateResponse) Reset() {
	*x = RevokeFactoryCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeFactoryCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeFactoryCertificateResponse) ProtoMessage() {}

func (x *RevokeFactoryCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeFactoryCertificateResponse.ProtoReflect.Descriptor instead.
func (*RevokeFactoryCertificateResponse) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{16}
}

type RevokeTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchByIndex string `protobuf:"bytes,1,opt,name=search_by_index,json=searchByIndex,proto3" json:"search_by_index,omitempty"`
	Key           string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *RevokeTokensRequest) Reset() {
	*x = RevokeTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeTokensRequest) ProtoMessage() {}

func (x *RevokeTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeTokensRequest.ProtoReflect.Descriptor instead.
func (*RevokeTokensRequest) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{17}
}

func (x *RevokeTokensRequest) GetSearchByIndex() string {
	if x != nil {
		return x.SearchByIndex
	}
	return ""
}

func (x *RevokeTokensRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type RevokeTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokensRevoked uint32 `protobuf:"varint,1,opt,name=tokens_revoked,json=tokensRevoked,proto3" json:"tokens_revoked,omitempty"`
}

func (x *RevokeTokensResponse) Reset() {
	*x = RevokeTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeTokensResponse) ProtoMessage() {}

func (x *RevokeTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeTokensResponse.ProtoReflect.Descriptor instead.
func (*RevokeTokensResponse) Descriptor() ([]byte, []int) {
	return file_token_proto_rawDescGZIP(), []int{18}
}

func (x *RevokeTokensResponse) GetTokensRevoked() uint32 {
	if x != nil {
		return x.TokensRevoked
	}
	return 0
}

var File_token_proto protoreflect.FileDescriptor

var file_token_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x22, 0x76, 0x0a, 0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e,
	0x0a, 0x09, 0x73, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x08, 0x73, 0x74, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9f,
	0x01, 0x0a, 0x08, 0x53, 0x74, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xc1, 0x02, 0x0a, 0x1b, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f,
	0x0a, 0x13, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6b, 0x69, 0x70, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x11, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x61, 0x73, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x6b, 0x69, 0x70, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x1e, 0x52, 0x65, 0x61, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70,
	0x62, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x1c, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7c, 0x0a,
	0x1f, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x20, 0x41,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x69, 0x73,
	0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x44,
	0x69, 0x73, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa0,
	0x01, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x5f, 0x6a, 0x77, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4a, 0x77, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x73, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x73, 0x22, 0x40, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70,
	0x62, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x73,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x22, 0x3d, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x4b, 0x65, 0x79, 0x22, 0x44, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a,
	0x1f, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x20, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x13, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x62, 0x79, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x42, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x3d, 0x0a, 0x14,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x72,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x32, 0x9d, 0x06, 0x0a, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x63, 0x0a, 0x14, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x16, 0x52, 0x65,
	0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x18, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x28, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x17, 0x44, 0x69, 0x73, 0x61, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x27, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x61,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a,
	0x18, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0c, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x1c,
	0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x2d, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_token_proto_rawDescOnce sync.Once
	file_token_proto_rawDescData = file_token_proto_rawDesc
)

func file_token_proto_rawDescGZIP() []byte {
	file_token_proto_rawDescOnce.Do(func() {
		file_token_proto_rawDescData = protoimpl.X.CompressGZIP(file_token_proto_rawDescData)
	})
	return file_token_proto_rawDescData
}

var file_token_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_token_proto_goTypes = []interface{}{
	(*TokenBundle)(nil),                      // 0: tokenpb.TokenBundle
	(*StsToken)(nil),                         // 1: tokenpb.StsToken
	(*AssociatePrimaryUserRequest)(nil),      // 2: tokenpb.AssociatePrimaryUserRequest
	(*ReassociatePrimaryUserRequest)(nil),    // 3: tokenpb.ReassociatePrimaryUserRequest
	(*ReassociatePrimaryUserResponse)(nil),   // 4: tokenpb.ReassociatePrimaryUserResponse
	(*AssociatePrimaryUserResponse)(nil),     // 5: tokenpb.AssociatePrimaryUserResponse
	(*AssociateSecondaryClientRequest)(nil),  // 6: tokenpb.AssociateSecondaryClientRequest
	(*AssociateSecondaryClientResponse)(nil), // 7: tokenpb.AssociateSecondaryClientResponse
	(*DisassociatePrimaryUserRequest)(nil),   // 8: tokenpb.DisassociatePrimaryUserRequest
	(*DisassociatePrimaryUserResponse)(nil),  // 9: tokenpb.DisassociatePrimaryUserResponse
	(*RefreshTokenRequest)(nil),              // 10: tokenpb.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),             // 11: tokenpb.RefreshTokenResponse
	(*TokensPage)(nil),                       // 12: tokenpb.TokensPage
	(*ListRevokedTokensRequest)(nil),         // 13: tokenpb.ListRevokedTokensRequest
	(*ListRevokedTokensResponse)(nil),        // 14: tokenpb.ListRevokedTokensResponse
	(*RevokeFactoryCertificateRequest)(nil),  // 15: tokenpb.RevokeFactoryCertificateRequest
	(*RevokeFactoryCertificateResponse)(nil), // 16: tokenpb.RevokeFactoryCertificateResponse
	(*RevokeTokensRequest)(nil),              // 17: tokenpb.RevokeTokensRequest
	(*RevokeTokensResponse)(nil),             // 18: tokenpb.RevokeTokensResponse
}
var file_token_proto_depIdxs = []int32{
	1,  // 0: tokenpb.TokenBundle.sts_token:type_name -> tokenpb.StsToken
	0,  // 1: tokenpb.ReassociatePrimaryUserResponse.data:type_name -> tokenpb.TokenBundle
	0,  // 2: tokenpb.AssociatePrimaryUserResponse.data:type_name -> tokenpb.TokenBundle
	0,  // 3: tokenpb.AssociateSecondaryClientResponse.data:type_name -> tokenpb.TokenBundle
	0,  // 4: tokenpb.RefreshTokenResponse.data:type_name -> tokenpb.TokenBundle
	12, // 5: tokenpb.ListRevokedTokensResponse.data:type_name -> tokenpb.TokensPage
	2,  // 6: tokenpb.Token.AssociatePrimaryUser:input_type -> tokenpb.AssociatePrimaryUserRequest
	3,  // 7: tokenpb.Token.ReassociatePrimaryUser:input_type -> tokenpb.ReassociatePrimaryUserRequest
	6,  // 8: tokenpb.Token.AssociateSecondaryClient:input_type -> tokenpb.AssociateSecondaryClientRequest
	8,  // 9: tokenpb.Token.DisassociatePrimaryUser:input_type -> tokenpb.DisassociatePrimaryUserRequest
	10, // 10: tokenpb.Token.RefreshToken:input_type -> tokenpb.RefreshTokenRequest
	13, // 11: tokenpb.Token.ListRevokedTokens:input_type -> tokenpb.ListRevokedTokensRequest
	15, // 12: tokenpb.Token.RevokeFactoryCertificate:input_type -> tokenpb.RevokeFactoryCertificateRequest
	17, // 13: tokenpb.Token.RevokeTokens:input_type -> tokenpb.RevokeTokensRequest
	5,  // 14: tokenpb.Token.AssociatePrimaryUser:output_type -> tokenpb.AssociatePrimaryUserResponse
	4,  // 15: tokenpb.Token.ReassociatePrimaryUser:output_type -> tokenpb.ReassociatePrimaryUserResponse
	7,  // 16: tokenpb.Token.AssociateSecondaryClient:output_type -> tokenpb.AssociateSecondaryClientResponse
	9,  // 17: tokenpb.Token.DisassociatePrimaryUser:output_type -> tokenpb.DisassociatePrimaryUserResponse
	11, // 18: tokenpb.Token.RefreshToken:output_type -> tokenpb.RefreshTokenResponse
	14, // 19: tokenpb.Token.ListRevokedTokens:output_type -> tokenpb.ListRevokedTokensResponse
	16, // 20: tokenpb.Token.RevokeFactoryCertificate:output_type -> tokenpb.RevokeFactoryCertificateResponse
	18, // 21: tokenpb.Token.RevokeTokens:output_type -> tokenpb.RevokeTokensResponse
	14, // [14:22] is the sub-list for method output_type
	6,  // [6:14] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_token_proto_init() }
func file_token_proto_init() {
	if File_token_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_token_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StsToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssociatePrimaryUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReassociatePrimaryUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReassociatePrimaryUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssociatePrimaryUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssociateSecondaryClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssociateSecondaryClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisassociatePrimaryUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisassociatePrimaryUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokensPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRevokedTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRevokedTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeFactoryCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeFactoryCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_token_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_token_proto_goTypes,
		DependencyIndexes: file_token_proto_depIdxs,
		MessageInfos:      file_token_proto_msgTypes,
	}.Build()
	File_token_proto = out.File
	file_token_proto_rawDesc = nil
	file_token_proto_goTypes = nil
	file_token_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TokenClient is the client API for Token service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TokenClient interface {
	// AssociatePrimaryUser
	// Authentication: cert + appkey + user session
	//
	// Sets the owner of a robot, issuing an access token for further
	// access and a client token for Chewy. Requires a valid user
	// session and revokes all previously existing tokens. The identity
	// of the robot is derived from the CN of the robot factory
	// certificate.
	AssociatePrimaryUser(ctx context.Context, in *AssociatePrimaryUserRequest, opts ...grpc.CallOption) (*AssociatePrimaryUserResponse, error)
	// ReassociatePrimaryUser
	// Authentication: cert + appkey + user session
	//
	// TODO - documentation
	ReassociatePrimaryUser(ctx context.Context, in *ReassociatePrimaryUserRequest, opts ...grpc.CallOption) (*ReassociatePrimaryUserResponse, error)
	// AssociateSecondaryClient
	// Authentication: cert + appkey + token
	//
	// Associates a secondary app for the primary user, generating a
	// client token for the secondary app to use. Associating a
	// non-primary user is not currently supported.
	AssociateSecondaryClient(ctx context.Context, in *AssociateSecondaryClientRequest, opts ...grpc.CallOption) (*AssociateSecondaryClientResponse, error)
	// DisassociatePrimaryUser
	// Authentication: cert + token
	//
	// Remove the primary user's access from the robot - immediately
	// revokes all access tokens for robot.
	DisassociatePrimaryUser(ctx context.Context, in *DisassociatePrimaryUserRequest, opts ...grpc.CallOption) (*DisassociatePrimaryUserResponse, error)
	// RefreshToken
	// Authentication: cert + token
	//
	// Refresh an existing access token. The access token may be
	// refreshed for up to one year, as long as it has not been revoked
	// (e.g. by DisassociatePrimaryUser).
	RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error)
	// ListRevokedTokens
	// Authentication: appkey
	//
	// Lists all currently revoked tokens, for populating the cache of
	// revoked tokens in each service which handles token-based
	// authentication. Only callable by other services (e.g. Chipper,
	// Jdocs, etc...)
	ListRevokedTokens(ctx context.Context, in *ListRevokedTokensRequest, opts ...grpc.CallOption) (*ListRevokedTokensResponse, error)
	// RevokeFactoryCertificate
	// Authentication: cert + appkey (TBD, admin only)
	//
	// RevokeFactoryCertificate blacklists one of the factory-issued
	// robot certificates.
	RevokeFactoryCertificate(ctx context.Context, in *RevokeFactoryCertificateRequest, opts ...grpc.CallOption) (*RevokeFactoryCertificateResponse, error)
	// RevokeTokens
	// Authentication: cert + appkey (TBD, admin only)
	//
	// Revoke tokens matching a user or robot.
	RevokeTokens(ctx context.Context, in *RevokeTokensRequest, opts ...grpc.CallOption) (*RevokeTokensResponse, error)
}

type tokenClient struct {
	cc grpc.ClientConnInterface
}

func NewTokenClient(cc grpc.ClientConnInterface) TokenClient {
	return &tokenClient{cc}
}

func (c *tokenClient) AssociatePrimaryUser(ctx context.Context, in *AssociatePrimaryUserRequest, opts ...grpc.CallOption) (*AssociatePrimaryUserResponse, error) {
	out := new(AssociatePrimaryUserResponse)
	err := c.cc.Invoke(ctx, "/tokenpb.Token/AssociatePrimaryUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) ReassociatePrimaryUser(ctx context.Context, in *ReassociatePrimaryUserRequest, opts ...grpc.CallOption) (*ReassociatePrimaryUserResponse, error) {
	out := new(ReassociatePrimaryUserResponse)
	err := c.cc.Invoke(ctx, "/tokenpb.Token/ReassociatePrimaryUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) AssociateSecondaryClient(ctx context.Context, in *AssociateSecondaryClientRequest, opts ...grpc.CallOption) (*AssociateSecondaryClientResponse, error) {
	out := new(AssociateSecondaryClientResponse)
	err := c.cc.Invoke(ctx, "/tokenpb.Token/AssociateSecondaryClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) DisassociatePrimaryUser(ctx context.Context, in *DisassociatePrimaryUserRequest, opts ...grpc.CallOption) (*DisassociatePrimaryUserResponse, error) {
	out := new(DisassociatePrimaryUserResponse)
	err := c.cc.Invoke(ctx, "/tokenpb.Token/DisassociatePrimaryUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error) {
	out := new(RefreshTokenResponse)
	err := c.cc.Invoke(ctx, "/tokenpb.Token/RefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) ListRevokedTokens(ctx context.Context, in *ListRevokedTokensRequest, opts ...grpc.CallOption) (*ListRevokedTokensResponse, error) {
	out := new(ListRevokedTokensResponse)
	err := c.cc.Invoke(ctx, "/tokenpb.Token/ListRevokedTokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) RevokeFactoryCertificate(ctx context.Context, in *RevokeFactoryCertificateRequest, opts ...grpc.CallOption) (*RevokeFactoryCertificateResponse, error) {
	out := new(RevokeFactoryCertificateResponse)
	err := c.cc.Invoke(ctx, "/tokenpb.Token/RevokeFactoryCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) RevokeTokens(ctx context.Context, in *RevokeTokensRequest, opts ...grpc.CallOption) (*RevokeTokensResponse, error) {
	out := new(RevokeTokensResponse)
	err := c.cc.Invoke(ctx, "/tokenpb.Token/RevokeTokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TokenServer is the server API for Token service.
type TokenServer interface {
	// AssociatePrimaryUser
	// Authentication: cert + appkey + user session
	//
	// Sets the owner of a robot, issuing an access token for further
	// access and a client token for Chewy. Requires a valid user
	// session and revokes all previously existing tokens. The identity
	// of the robot is derived from the CN of the robot factory
	// certificate.
	AssociatePrimaryUser(context.Context, *AssociatePrimaryUserRequest) (*AssociatePrimaryUserResponse, error)
	// ReassociatePrimaryUser
	// Authentication: cert + appkey + user session
	//
	// TODO - documentation
	ReassociatePrimaryUser(context.Context, *ReassociatePrimaryUserRequest) (*ReassociatePrimaryUserResponse, error)
	// AssociateSecondaryClient
	// Authentication: cert + appkey + token
	//
	// Associates a secondary app for the primary user, generating a
	// client token for the secondary app to use. Associating a
	// non-primary user is not currently supported.
	AssociateSecondaryClient(context.Context, *AssociateSecondaryClientRequest) (*AssociateSecondaryClientResponse, error)
	// DisassociatePrimaryUser
	// Authentication: cert + token
	//
	// Remove the primary user's access from the robot - immediately
	// revokes all access tokens for robot.
	DisassociatePrimaryUser(context.Context, *DisassociatePrimaryUserRequest) (*DisassociatePrimaryUserResponse, error)
	// RefreshToken
	// Authentication: cert + token
	//
	// Refresh an existing access token. The access token may be
	// refreshed for up to one year, as long as it has not been revoked
	// (e.g. by DisassociatePrimaryUser).
	RefreshToken(context.Context, *RefreshTokenRequest) (*RefreshTokenResponse, error)
	// ListRevokedTokens
	// Authentication: appkey
	//
	// Lists all currently revoked tokens, for populating the cache of
	// revoked tokens in each service which handles token-based
	// authentication. Only callable by other services (e.g. Chipper,
	// Jdocs, etc...)
	ListRevokedTokens(context.Context, *ListRevokedTokensRequest) (*ListRevokedTokensResponse, error)
	// RevokeFactoryCertificate
	// Authentication: cert + appkey (TBD, admin only)
	//
	// RevokeFactoryCertificate blacklists one of the factory-issued
	// robot certificates.
	RevokeFactoryCertificate(context.Context, *RevokeFactoryCertificateRequest) (*RevokeFactoryCertificateResponse, error)
	// RevokeTokens
	// Authentication: cert + appkey (TBD, admin only)
	//
	// Revoke tokens matching a user or robot.
	RevokeTokens(context.Context, *RevokeTokensRequest) (*RevokeTokensResponse, error)
}

// UnimplementedTokenServer can be embedded to have forward compatible implementations.
type UnimplementedTokenServer struct {
}

func (*UnimplementedTokenServer) AssociatePrimaryUser(context.Context, *AssociatePrimaryUserRequest) (*AssociatePrimaryUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssociatePrimaryUser not implemented")
}
func (*UnimplementedTokenServer) ReassociatePrimaryUser(context.Context, *ReassociatePrimaryUserRequest) (*ReassociatePrimaryUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReassociatePrimaryUser not implemented")
}
func (*UnimplementedTokenServer) AssociateSecondaryClient(context.Context, *AssociateSecondaryClientRequest) (*AssociateSecondaryClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssociateSecondaryClient not implemented")
}
func (*UnimplementedTokenServer) DisassociatePrimaryUser(context.Context, *DisassociatePrimaryUserRequest) (*DisassociatePrimaryUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisassociatePrimaryUser not implemented")
}
func (*UnimplementedTokenServer) RefreshToken(context.Context, *RefreshTokenRequest) (*RefreshTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshToken not implemented")
}
func (*UnimplementedTokenServer) ListRevokedTokens(context.Context, *ListRevokedTokensRequest) (*ListRevokedTokensResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRevokedTokens not implemented")
}
func (*UnimplementedTokenServer) RevokeFactoryCertificate(context.Context, *RevokeFactoryCertificateRequest) (*RevokeFactoryCertificateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeFactoryCertificate not implemented")
}
func (*UnimplementedTokenServer) RevokeTokens(context.Context, *RevokeTokensRequest) (*RevokeTokensResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeTokens not implemented")
}

func RegisterTokenServer(s *grpc.Server, srv TokenServer) {
	s.RegisterService(&_Token_serviceDesc, srv)
}

func _Token_AssociatePrimaryUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssociatePrimaryUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).AssociatePrimaryUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tokenpb.Token/AssociatePrimaryUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).AssociatePrimaryUser(ctx, req.(*AssociatePrimaryUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_ReassociatePrimaryUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReassociatePrimaryUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).ReassociatePrimaryUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tokenpb.Token/ReassociatePrimaryUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).ReassociatePrimaryUser(ctx, req.(*ReassociatePrimaryUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_AssociateSecondaryClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssociateSecondaryClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).AssociateSecondaryClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tokenpb.Token/AssociateSecondaryClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).AssociateSecondaryClient(ctx, req.(*AssociateSecondaryClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_DisassociatePrimaryUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisassociatePrimaryUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).DisassociatePrimaryUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tokenpb.Token/DisassociatePrimaryUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).DisassociatePrimaryUser(ctx, req.(*DisassociatePrimaryUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_RefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).RefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tokenpb.Token/RefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).RefreshToken(ctx, req.(*RefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_ListRevokedTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRevokedTokensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).ListRevokedTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tokenpb.Token/ListRevokedTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).ListRevokedTokens(ctx, req.(*ListRevokedTokensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_RevokeFactoryCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeFactoryCertificateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).RevokeFactoryCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tokenpb.Token/RevokeFactoryCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).RevokeFactoryCertificate(ctx, req.(*RevokeFactoryCertificateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_RevokeTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeTokensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).RevokeTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tokenpb.Token/RevokeTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).RevokeTokens(ctx, req.(*RevokeTokensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Token_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tokenpb.Token",
	HandlerType: (*TokenServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AssociatePrimaryUser",
			Handler:    _Token_AssociatePrimaryUser_Handler,
		},
		{
			MethodName: "ReassociatePrimaryUser",
			Handler:    _Token_ReassociatePrimaryUser_Handler,
		},
		{
			MethodName: "AssociateSecondaryClient",
			Handler:    _Token_AssociateSecondaryClient_Handler,
		},
		{
			MethodName: "DisassociatePrimaryUser",
			Handler:    _Token_DisassociatePrimaryUser_Handler,
		},
		{
			MethodName: "RefreshToken",
			Handler:    _Token_RefreshToken_Handler,
		},
		{
			MethodName: "ListRevokedTokens",
			Handler:    _Token_ListRevokedTokens_Handler,
		},
		{
			MethodName: "RevokeFactoryCertificate",
			Handler:    _Token_RevokeFactoryCertificate_Handler,
		},
		{
			MethodName: "RevokeTokens",
			Handler:    _Token_RevokeTokens_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "token.proto",
}
